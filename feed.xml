<?xml version="1.0" encoding="UTF-8"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><atom:link href="http://practical.li/" rel="self" type="application/rss+xml"/><title>Practicalli</title><link>http://practical.li/</link><description>Discovering the fun in Functional Programming with Clojure</description><lastBuildDate>Sat, 29 Jan 2022 00:57:19 +0000</lastBuildDate><generator>clj-rss</generator><item><guid>http://practical.li/blog/posts/code-snippets-for-clojure-lsp/</guid><link>http://practical.li/blog/posts/code-snippets-for-clojure-lsp/</link><title>Code Snippets for Clojure LSP</title><description>Clojure LSP snippets are an editor agnostic approach to expanding common code forms from snippet names, saving typing and acting as a guide to the syntax of a Clojure form.  Practicalli also uses snippets for rich comments, documentation and highlighting logical sections of code in a namespace.Clojure LSP snippets are defined using the EDN syntax and have the same tab stop syntax as Yasnippets and other snippet tools.Clojure LSP snippets are covered in Practiclli Spacemacs, including a large number of examples of custom snippets</description><pubDate>Fri, 28 Jan 2022 00:00:00 +0000</pubDate></item><item><guid>http://practical.li/blog/posts/emacs-cider-removing-old-cider-compat/</guid><link>http://practical.li/blog/posts/emacs-cider-removing-old-cider-compat/</link><title>Emacs CIDER removing old cider-compat namespace</title><description>The latest snapshot of CIDER includes some welcome tidy up of the code.  One notable removal is cider-compat which was added to support Emacs versions previous to 25.  As most of the Emacs world is on version 27 (or 28 / 29) then there is no need to include cider-compat any more.However, some Emacs packages that haven't change in a while may still used cider-compat, although the only one to date that has been found is helm-cider.  Unfortunately is causing Clojure file to fail to load when used with the latest CIDER snapshot.When helm-cider is enabled, Emacs is unable to load Clojure files.  The error reported is:</description><pubDate>Sun, 02 Jan 2022 00:00:00 +0000</pubDate></item><item><guid>http://practical.li/blog/posts/clojure-which-execution-option-to-use/</guid><link>http://practical.li/blog/posts/clojure-which-execution-option-to-use/</link><title>Clojure CLI tools - which execution option to use</title><description>Clojure CLI tools provide a very flexible way to run Clojure, using aliases to include community libraries and tools to enhance clojure projects and provide independent tools. Understand the execution options (exec-opts) on the command line options ensures an effective use of Clojure CLI tools.Updated on 24th December 2021 with feedback from Alex, Sean and other community members.  Thank you.Clojure CLI tools first documented released in February 2020 with a specific focus on running Clojure code quickly and easily, which also required the management of dependencies from Maven, Git and a local file space.</description><pubDate>Fri, 24 Dec 2021 00:00:00 +0000</pubDate></item><item><guid>http://practical.li/blog/posts/clojure-cli-tools-understanding-aliases/</guid><link>http://practical.li/blog/posts/clojure-cli-tools-understanding-aliases/</link><title>Clojure CLI tools - understanding aliases</title><description>Clojure CLI tools provide a very flexible way to run Clojure and uses aliases to include community libraries and tools for working with Clojure projects. Understand what an alias is and how to define them ensures an effective use of Clojure CLI tools.This first article focuses on what an alias is and how to define them. The Clojure CLI tools - understanding flags article describes the different options for using aliases, with clojure.main, clojure.exec and as tools, from a user perspective.practicalli/clojure-deps-edn provides a great many examples of defining aliases, as well as providing a quick way to add many community tools on top of Clojure CLI tools.</description><pubDate>Sun, 19 Dec 2021 00:00:00 +0000</pubDate></item><item><guid>http://practical.li/blog/posts/automate-cryogen-clojure-blog-with-github-actions/</guid><link>http://practical.li/blog/posts/automate-cryogen-clojure-blog-with-github-actions/</link><title>Automate Cryogen Clojure blog with GitHub Actions</title><description>Practicalli uses Cryogen static site generator for its blog website.  Cryogen is fast and simple to use thanks to the Clojure EDN file used for configuration.Cryogen documentation shows how to publish a Cryogen blog to GitHub pages using Git command.  The deployment can be automated using GitHub actions, so that a new version of the site is deployed when Pull Requests are merged to the specified branch (or on direct commits to that branch).</description><pubDate>Sat, 28 Aug 2021 00:00:00 +0000</pubDate></item><item><guid>http://practical.li/blog/posts/overview-of-language-server-protocol-lsp-for-clojure-development/</guid><link>http://practical.li/blog/posts/overview-of-language-server-protocol-lsp-for-clojure-development/</link><title>Overview of Language Server Protocol LSP for Clojure development</title><description>Microsoft Language Server Protocol, LSP, is exactly what the name says it is.  Its a (JSON RPC) protocol.  Its no more and no less than that.  LSP is however a big strategy peace for Mircrosoft to encourage developers to adopt VS Code, which naturally provides support for the LSP protocol.  The implementation of tooling that uses LSP is left to companies and communities that develop editor and related tools.Standards can be an opportunity to focus development work and provide a rich set of tools that are far easier to integrate.  There are many examples of where a protocol has provided a huge amount of diversity, such as TCP/IP, DNS, HTTP and HTML protocols that drove the creation of the web we know today. Standard protocols in themselves did not make the web, but allowed developers to build on top of them and create the rich and diverse experience on the web that we see today.LSP is no different.  By itself LSP provides no benefit.  However, when adopted as a standard by tooling developers it has the potential to help grow an even richer experience for the whole developer community.</description><pubDate>Sat, 20 Mar 2021 00:00:00 +0000</pubDate></item><item><guid>http://practical.li/blog/posts/brave-clojure-redux-part01-the-repl/</guid><link>http://practical.li/blog/posts/brave-clojure-redux-part01-the-repl/</link><title>Brave Clojure redux - part 1 - the REPL</title><description>Brave Clojure redux is series that revisits the code examples and tooling covered in the book: "Clojure for the Brave and the True".  The good news is you do not need to be brave or true to read the book or learn Clojure either.  It does help if you have some time and motivation though.Brave Clojure redux uses Clojure CLI tools rather than Leiningen as used in Brave Clojure.  Code examples will be used from the book, complemented with additional examples where relevant.Part 1 covers the Clojure REPL process, a vital part of Clojure development. The basics of building and running a project are also included.</description><pubDate>Tue, 16 Feb 2021 00:00:00 +0000</pubDate></item><item><guid>http://practical.li/blog/posts/clojure-repl-jack-in-or-connect/</guid><link>http://practical.li/blog/posts/clojure-repl-jack-in-or-connect/</link><title>Clojure CLI tools - To jack-in or connect, that is the question</title><description>To jack-in or connect, that is the question.
Whether it is more effective to relying on the editor to auto-inject the required dependencies for every workflow, or assemble your own aliases them include any editor - William "Hacker" ShakespearA REPL is the central part of Clojure development. For the full workflow, an editor connects to the REPL to evaluate code and show instant results.The developer can be in control of how the REPL starts, managing libraries and tools used alongside the REPL.  Or the editor can automate the process and control how the REPL is started.</description><pubDate>Thu, 31 Dec 2020 00:00:00 +0000</pubDate></item><item><guid>http://practical.li/blog/posts/clojure-cli-aliases-deserve-designing-too/</guid><link>http://practical.li/blog/posts/clojure-cli-aliases-deserve-designing-too/</link><title>Clojure CLI tools aliases deserve good design too</title><description>Aliases in Clojure CLI tools are an important way to configure how to work with a Clojure project effectively, so they deserve the same attention and clean design applied to source code, test code and other configuration.practicalli/clojure-deps-edn provides examples of over 50 aliases crafted to use over multiple projects and providing access to a wide range of Clojure CLI community tools.One way to kill the excellent experience that Clojure CLI tools bring is to write aliases that conflate concepts and are just a catch all for loosely related configuration.  Without applying a little thought and design to aliases it just makes more work later on.</description><pubDate>Fri, 11 Dec 2020 00:00:00 +0000</pubDate></item><item><guid>http://practical.li/blog/posts/cloure-community-getting-help/</guid><link>http://practical.li/blog/posts/cloure-community-getting-help/</link><title>Clojure community - getting help</title><description>A guide to getting help from the Clojure community.  There are several ways you can get help so you can use which you find more valuable and rewarding.  The most active tools include:General website such as redit/clojure are useful ways for the Clojure community to reach out to the more general development community.</description><pubDate>Wed, 15 Jul 2020 00:00:00 +0000</pubDate></item><item><guid>http://practical.li/blog/posts/web-scraping-with-clojure-hacking-hacker-news/</guid><link>http://practical.li/blog/posts/web-scraping-with-clojure-hacking-hacker-news/</link><title>Web Scraping with Clojure - Scraping Hacker News</title><description>Enlive is a Clojure library that can be used for generating dynamic server-side content as well as scraping websites.Scraping websites is sometimes required when they do not provide an API.  Although Hacker News does have an API, will show how to scrape its website using Enlive's selectors.</description><pubDate>Fri, 13 Mar 2020 00:00:00 +0000</pubDate></item><item><guid>http://practical.li/blog/posts/raising-spacemacs-issues-and-pull-requests/</guid><link>http://practical.li/blog/posts/raising-spacemacs-issues-and-pull-requests/</link><title>Spacemacs - raising issues and pull requests</title><description>Contributing to Spacemacs is very much a community activity and we can all help the maintainers continue to make Spacemacs an excellent experience for everyone.With a few simple tips, its easy to report issues and create pull requests that are ready to merge into Spacemacs develop.</description><pubDate>Fri, 14 Feb 2020 00:00:00 +0000</pubDate></item><item><guid>http://practical.li/blog/posts/lenovo-x1-extreme-gen2-ubuntu-install/</guid><link>http://practical.li/blog/posts/lenovo-x1-extreme-gen2-ubuntu-install/</link><title>Ubuntu install on Lenovo X1 Extreme 2nd Gen with RAID</title><description>A successful installation of Ubuntu 19.10 on the Lenovo X1 Extreme (gen2) laptop, configured with 2 solid state hard drives configured for RAID-0 with LLVM encrypted partitions.  , along with   The laptop is configured with 32Gb memory and 2 SSDs in RAID-0 configuration for speedThis laptop will be used for real-time video encoding for the Practicalli broadcasts via YouTube as well as doing some data science in Clojure.This was a very smooth installation and all the hardware works correctly.  The nVidia open source drivers and WiFi adaptor did cause a little extra work, so I have included tips and troubleshooting guides to help you reslove these issues quickly.</description><pubDate>Sun, 15 Dec 2019 00:00:00 +0000</pubDate></item><item><guid>http://practical.li/blog/posts/practicalli-youtube-website/</guid><link>http://practical.li/blog/posts/practicalli-youtube-website/</link><title>Practicalli YouTube Website</title><description>YouTube is great service for sharing your video content across the world.  However, the user experience is highly focused on discovering lots of different content in an adhoc manner.  The user experience is not so great when you wish to curate a series of videos.YouTube has a very detailed API which can be used to create a website to provide your own user experience, so lets start building a website with Clojure.All code is available on the practicalli/youtube-website repository.</description><pubDate>Sat, 07 Dec 2019 00:00:00 +0000</pubDate></item><item><guid>http://practical.li/blog/posts/reclojure-the-community-conference-for-all/</guid><link>http://practical.li/blog/posts/reclojure-the-community-conference-for-all/</link><title>re:Clojure - the Clojure community conference for all</title><description>re:Clojure was a rapidly assembled conference created by several of the London Clojurian community members, after the closing of SkillsMatter who for 8 years ran an a Clojure conference in London. Luckily many of the speakers were available to talk at the this new conference and several members of the community made it all happen, with the help of lots of wonderful sponsorsAll the talks were recorded and videos will be published soon, so subscribe to the re:Cojure YouTube channel and be notified when they are available.Here are some of my highlights from the re:Clojure conference.</description><pubDate>Tue, 03 Dec 2019 00:00:00 +0000</pubDate></item><item><guid>http://practical.li/blog/posts/clojure-advent-of-code-2019/</guid><link>http://practical.li/blog/posts/clojure-advent-of-code-2019/</link><title>Clojure Advent Of Code - a fun way to learn</title><description>Advent of Code is the annual coding challenge with a festive theme.  Each day there is a new challenge in two parts, the first fairly easy the second a little more involved.  The challenges are an investment of your time to complete them all, although even trying just a few is enough to help you think in different ways.Every programming language requires regular practice to maintain your skills.  A full time developer role gives you lots of opportunities to practice every day, however, its often focused in around solving problems within a specific business domain, with little time to explore others.  The Advent of Code puts you in a different domain, so its great for extending your coding experiences.Solving challenges in a different language is another great way to extend your experiences, so here are some tips and examples for solving the advent of code in Clojure.</description><pubDate>Mon, 02 Dec 2019 00:00:00 +0000</pubDate></item><item><guid>http://practical.li/blog/posts/advent-of-parens-2019/</guid><link>http://practical.li/blog/posts/advent-of-parens-2019/</link><title>Advent Of Parens 2019 - feast on Clojure this holiday season</title><description>The holiday season is know for over indulge, so why not stuff your head full of Clojure and functional programming.  Its far healthier than the alternatives :)</description><pubDate>Sun, 01 Dec 2019 00:00:00 +0000</pubDate></item><item><guid>http://practical.li/blog/posts/consuming-apis-with-clojure/</guid><link>http://practical.li/blog/posts/consuming-apis-with-clojure/</link><title>Consuming APIs from Clojure</title><description>When getting results from API calls, its very common to recieve data in JavaScript Object Notation (JSON).Once we have the JSON data, it is converted to a Clojure data structure to use the hundreds of functions in clojure.core that can readily transform the shape of that data.We can process this with the clojure.data.json library and community projects including cheshire and transit.</description><pubDate>Sat, 30 Nov 2019 00:00:00 +0000</pubDate></item><item><guid>http://practical.li/blog/posts/webapp-routes-with-json/</guid><link>http://practical.li/blog/posts/webapp-routes-with-json/</link><title>Clojure Webapp routing and APIs with JSON</title><description>Defining routes for a Clojure webapps is easy with the Compojure library and we can also serve JSON to create a simple API.  All this is built on the Clojure webserver we built in the previous article.Compojure has a defroutes macro that provides a simple way to define routes and there are other convienience functions that make routing very straight forward.We can also add transit and other libraries to help manage JSON.</description><pubDate>Sat, 23 Nov 2019 00:00:00 +0000</pubDate></item><item><guid>http://practical.li/blog/posts/clojure-web-server-cli-tools-deps-edn/</guid><link>http://practical.li/blog/posts/clojure-web-server-cli-tools-deps-edn/</link><title>Clojure web server from scratch with deps.edn</title><description>Discover how to build a Clojure web server from the ground up using Clojure CLI tools to create and run the project and deps.edn to manage the dependencies.Update: Practicalli Clojure WebApps has newer versions of this guide.  Take a look at the Status Monitor and Banking on Clojure projectsThis project will be used to build a web server that will serve our API, which we will build in future posts and study group broadcasts.</description><pubDate>Fri, 15 Nov 2019 00:00:00 +0000</pubDate></item><item><guid>http://practical.li/blog/posts/streamline-contributions-with-github-pull-request-templates/</guid><link>http://practical.li/blog/posts/streamline-contributions-with-github-pull-request-templates/</link><title>Streamline Contributions with GitHub Pull Request Templates</title><description>Pull requests are very valuable to project maintainers, especially if they follow guidelines for the project.  Using a pull request template allows project maintainers to define the most effective way to contribute right inside the contribution projects.Project maintainers, especially on very active projects, rarely have time to spend on triage of pull requests.  Generally the simpler a pull request the easier it is for a maintainer to review it and accept it.Previously we created GitHub issue templates, for which their can be many.  one pull request template as all pull requests are the same type.</description><pubDate>Tue, 05 Nov 2019 00:00:00 +0000</pubDate></item><item><guid>http://practical.li/blog/posts/improving-communication-with-github-issue-templates/</guid><link>http://practical.li/blog/posts/improving-communication-with-github-issue-templates/</link><title>Improving communication with GitHub issue templates</title><description>Create templates for issues and pull requests can greatly improve feedback and contributions, especially as an open source project maintainer.  We will look specifically at issue templates.Templates can ask people to provide specific information, or request use of a tool for generating system information (e.g. Spacemacs).  Automatic assignment and labelling saves time on issue triage by the project maintainers.Templates can be created for most shared Git repository services, i.e GitHub, GitLab, BitBucket, etc.</description><pubDate>Mon, 04 Nov 2019 00:00:00 +0000</pubDate></item><item><guid>http://practical.li/blog/posts/clojure-powered-blogging-with-cryogen/</guid><link>http://practical.li/blog/posts/clojure-powered-blogging-with-cryogen/</link><title>Clojure powered blogging with Cryogen</title><description>A website for blogging doesn't need to be a complex content management system, a simple and lightweight static website generator can create engaging websites that are easy to manage with Git.Cryogen is a static site generator written in Clojure, allowing content to be written in either markdown or asciidoc.  Posts and pages are configured with Clojure hash-maps to manage the meta-data and layout information for each, including .Cryogen seems very quick to generate a site and a local server can be run to automatically generate an updated website when changes to posts and pages are saved.</description><pubDate>Sun, 20 Oct 2019 00:00:00 +0000</pubDate></item><item><guid>http://practical.li/blog/posts/community-tools-for-clojure-cli/</guid><link>http://practical.li/blog/posts/community-tools-for-clojure-cli/</link><title>Community projects for Clojure CLI tools</title><description>There are a number of tools from the Clojure community which add build tool features to the Clojure CLI tools.  This enables developers to have a very lightweight and customisable set of tools that just do what they need.This article just covers the very basics of each tool, see each projects documentation to get the full benefit of each tool.</description><pubDate>Fri, 09 Aug 2019 00:00:00 +0000</pubDate></item><item><guid>http://practical.li/blog/posts/journey-to-the-edge-of-clojure/</guid><link>http://practical.li/blog/posts/journey-to-the-edge-of-clojure/</link><title>journey to the edge of clojure</title><description>This article is a work in progressClojure CLI tools is a relatively new approach to creating an managing projects.  The Edge project from JUXT takes the approach and extends it with its own features, such as being able to update projects created from the edge configuration.Unlike Leiningen and Boot templates which are one of tasks, you can update a project you created a while ago with Edge and bring it up to date.  It will be interesting to try this out in future articles.</description><pubDate>Fri, 09 Aug 2019 00:00:00 +0000</pubDate></item><item><guid>http://practical.li/blog/posts/development-workflow-with-clojure-cli-tools/</guid><link>http://practical.li/blog/posts/development-workflow-with-clojure-cli-tools/</link><title>Development Workflow with Clojure CLI tools</title><description>Continuing our exploration with Clojure CLI tools, we will discuss what what templates are available to help us create project,  Then we will create a new ClojureScript project using figwheel-main and show the different builds we can use to provide several workflows for developing, testing and deploying an application.We will create a new project using the figwheel-main template, explaining that we need to specify organisation/project-name or organisation.project-name for the clj-new templates to work properly.Then run the project using the -A:fig:build alias to run with rebel readline to our user account version of deps.edn so it is available for all projects.  Then we will run a test runner and see the auto-testing monitoring.  Finally we will show ways to configure a deploy workflow that we can use with GitHub</description><pubDate>Sun, 04 Aug 2019 00:00:00 +0000</pubDate></item><item><guid>http://practical.li/blog/posts/gaining-confidence-with-Clojure-CLI-tools/</guid><link>http://practical.li/blog/posts/gaining-confidence-with-Clojure-CLI-tools/</link><title>Gaining confidence with Clojure CLI tools</title><description>We are going to try out the different command line options available as we continue our journey into the Clojure CLI tools..We explore the different ways to running Clojure code, from a single expression to a full project.  We include examples of aliases for optional configuration and combining aliases to create specific configurations when running a project.  Finally we will see how to diagnose a project and understand potential sources of conflicts.Newer content can be found in Using Clojure tools section of Practicalli Clojure</description><pubDate>Fri, 26 Jul 2019 00:00:00 +0000</pubDate></item><item><guid>http://practical.li/blog/posts/a-deeper-understanding-of-clojure-cli-tools/</guid><link>http://practical.li/blog/posts/a-deeper-understanding-of-clojure-cli-tools/</link><title>A deeper understanding of Clojure CLI tools</title><description>CLI tools make Clojure very accessible and simple to install as they are a essentially a wrapper for running Clojure code using the java command and use additional libraries to manage dependencies, class paths, create projects and build java archive (jar) files.Newer content can be found in Using Clojure tools section of Practicalli ClojureIts quite common to use the java command to run your code in production, usually defined in a shell script.  Leiningen can be used to run your application in production too, however, because Leiningen creates 2 JVM instances (one for itself and one for the application), its more efficient to just use the java command.</description><pubDate>Sun, 21 Jul 2019 00:00:00 +0000</pubDate></item><item><guid>http://practical.li/blog/posts/cider-jack-in-to-clojure-cli-projects-from-spacemacs/</guid><link>http://practical.li/blog/posts/cider-jack-in-to-clojure-cli-projects-from-spacemacs/</link><title>CIDER jack-in to Clojure CLI projects from Spacemacs</title><description>Running a Clojure project created with CLI tools or clj-new may require you to pass in an alias for the REPL to pick up the right libraries.A few days ago I created a new ClojureScript and reagent project, using the Clojure CLI tools and clj-new project creation tool, which converts Leiningen and Boot templates into a deps.edn based project.  Unfortunately when I created a project from the fighwheel-main template the REPL failed to run from CIDER using cider-jack-in-cljs, saying that figwheel-main was not found.  All that was required was to specify the :fig alias when running a REPL.This article covers two approaches to running Clojure CLI projects from CIDER jack-in that require setting of an alias or multiple aliases e.g. -A:fig:build:party:hammock</description><pubDate>Tue, 16 Jul 2019 00:00:00 +0000</pubDate></item><item><guid>http://practical.li/blog/posts/clojure-cli-and-tools-deps/</guid><link>http://practical.li/blog/posts/clojure-cli-and-tools-deps/</link><title>Clojure CLI and tools.deps</title><description>Clojure Command Line Interface (CLI) tools provide a fast way for developers to get started with Clojure and simplify an already pretty simple experience.   With tools.deps it also provides a more flexible approach to including libraries, including the use of code from a specific commit in a Git repository.Newer content can be found in Using Clojure tools section of Practicalli ClojurePracticalli Clojure 35 - Clojure CLI tools - an introduction is a video of a live broadcast of this content (inclucing typos)</description><pubDate>Sat, 13 Jul 2019 00:00:00 +0000</pubDate></item><item><guid>http://practical.li/blog/posts/testing-live-coding/</guid><link>http://practical.li/blog/posts/testing-live-coding/</link><title>Testing Klipse Integration</title><description>A simple article to test the klipse integrationLets do some simple Clojure code</description><pubDate>Mon, 17 Oct 2016 00:00:00 +0000</pubDate></item><item><guid>http://practical.li/blog/posts/yasnippets-for-faster-clojure-development/</guid><link>http://practical.li/blog/posts/yasnippets-for-faster-clojure-development/</link><title>YASnippets for faster clojure coding</title><description>Yasnippets minimise typing for commonly used Clojure forms and documentation structures, or any other text regularly created. Yasnippets have placeholders that allow jumping (tabbing) to points in the snippet, so specific text can be added to the more generic text of the snippet.Emacs YASnippet package uses mode-specific snippets that expand to anything from a simple text replacement to an intricate code block structure using placeholders to add specific values to the general form.See YASnippet in action in this Emacs Yasnippet video.</description><pubDate>Sat, 23 Jul 2016 00:00:00 +0000</pubDate></item><item><guid>http://practical.li/blog/posts/writing-custom-snippets-for-yasnippets/</guid><link>http://practical.li/blog/posts/writing-custom-snippets-for-yasnippets/</link><title>Writing custom snippets for yasnippet</title><description>Snippets are names that expand to code or documentation, to minimise typing commonly used code pattern and can serve as a reminder of common Clojure forms.YASnippets templates are defined in plain text, so are very easy to learn and write.The content of a snippet can be anything, from a simple piece of text or a more involved code structure with placeholders for tab stops.  Snippets can even include Emacs lisp (elisp) code which is evaluated, allowing the snippet to tap into all the features of Emacs.</description><pubDate>Sat, 23 Jul 2016 00:00:00 +0000</pubDate></item><item><guid>http://practical.li/blog/posts/2016-01-07-docs/</guid><link>http://practical.li/blog/posts/2016-01-07-docs/</link><title>Quick Start Guide</title><description>This intro only documents a subset of Cryogen's features. For additional documentation please see the cryogen site.Features</description><pubDate>Thu, 07 Jan 2016 00:00:00 +0000</pubDate></item><item><guid>http://practical.li/blog/posts/2014-11-04-second-post/</guid><link>http://practical.li/blog/posts/2014-11-04-second-post/</link><title>Yet Another Post</title><description>This Post So Fetchsome more stuff happened</description><pubDate>Tue, 04 Nov 2014 00:00:00 +0000</pubDate></item><item><guid>http://practical.li/blog/posts/2014-03-10-first-post/</guid><link>http://practical.li/blog/posts/2014-03-10-first-post/</link><title>A Post</title><description>This Post Not Fetch Enoughsome stuff happenedStop trying to make fetch happen.</description><pubDate>Mon, 10 Mar 2014 00:00:00 +0000</pubDate></item></channel></rss>